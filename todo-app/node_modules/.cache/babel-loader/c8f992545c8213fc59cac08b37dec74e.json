{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayn\\\\Desktop\\\\todo-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  renderTodo(text) {\n    return React.createElement(Todo, {\n      content: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"\\u2003\\u2003\\u2003Todo List\"), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: () => this.handleDone(item.id),\n      checked: item.done,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: 'inline',\n        textDecoration: item.style\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"\\u2003\", item.text, \"\\u2003\"), React.createElement(\"button\", {\n      onClick: () => this.handleDelete(item.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"delete\")))), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Add new task: \", this.state.items.length + 1)));\n  }\n\n  handleDelete(id) {\n    this.setState(prevState => ({\n      items: prevState.items.filter(item => item.id != id)\n    }));\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleDone(id) {\n    let prevState = this.state;\n\n    for (let item of prevState.items) {\n      if (item.id == id) {\n        item.done = !item.done;\n        item.style = item.done ? 'none' : 'line-through';\n      }\n    }\n\n    this.setState({\n      items: prevState.items //style: 'text-decoration:line-through'\n\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.text.length) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now(),\n      done: false,\n      style: 'none'\n    };\n    this.setState(prevState => ({\n      items: prevState.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: false //style: 'text-decoration:none'\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      disabled: this.state.done,\n      onClick: () => this.handleDone(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.content);\n  }\n\n} //ReactDOM.render(<TodoList />, mountNode);\n\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\mayn\\Desktop\\todo-app\\src\\App.js"],"names":["React","TodoList","Component","constructor","props","state","items","text","handleChange","bind","handleSubmit","handleDelete","renderTodo","render","map","item","id","handleDone","done","display","textDecoration","style","length","setState","prevState","filter","e","target","value","preventDefault","newItem","Date","now","concat","Todo","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AACDG,EAAAA,UAAU,CAACL,IAAD,EAAO;AACf,WACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AACDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBC,IAAI,IACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAE,MAAM,KAAKC,UAAL,CAAgBF,IAAI,CAACC,EAArB,CAAxC;AAAkE,MAAA,OAAO,EAAED,IAAI,CAACG,IAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAC,QAAT;AAAmBC,QAAAA,cAAc,EAACL,IAAI,CAACM;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAECN,IAAI,CAACR,IAFN,WAFJ,EAOE;AAAS,MAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBI,IAAI,CAACC,EAAvB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADD,CADD,CAFF,EAkBE;AAAM,MAAA,QAAQ,EAAE,KAAKN,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,QAAQ,EAAE,KAAKF,YADjB;AAEE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,IAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiB,KAAKF,KAAL,CAAWC,KAAX,CAAiBgB,MAAjB,GAA0B,CAD3C,CALF,CAlBF,CADF;AA8BD;;AAEDX,EAAAA,YAAY,CAACK,EAAD,EAAK;AACf,SAAKO,QAAL,CAAcC,SAAS,KAAK;AAC1BlB,MAAAA,KAAK,EAAEkB,SAAS,CAAClB,KAAV,CAAgBmB,MAAhB,CAAuBV,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWA,EAA1C;AADmB,KAAL,CAAvB;AAGD;;AAEDR,EAAAA,YAAY,CAACkB,CAAD,EAAI;AACd,SAAKH,QAAL,CAAc;AAAEhB,MAAAA,IAAI,EAAEmB,CAAC,CAACC,MAAF,CAASC;AAAjB,KAAd;AACD;;AAEDX,EAAAA,UAAU,CAACD,EAAD,EAAK;AACb,QAAIQ,SAAS,GAAG,KAAKnB,KAArB;;AACA,SAAI,IAAIU,IAAR,IAAgBS,SAAS,CAAClB,KAA1B,EAAiC;AAC/B,UAAGS,IAAI,CAACC,EAAL,IAAWA,EAAd,EAAiB;AACfD,QAAAA,IAAI,CAACG,IAAL,GAAY,CAACH,IAAI,CAACG,IAAlB;AACAH,QAAAA,IAAI,CAACM,KAAL,GAAaN,IAAI,CAACG,IAAL,GAAW,MAAX,GAAkB,cAA/B;AACD;AACF;;AACD,SAAKK,QAAL,CAAc;AACZjB,MAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADL,CAEZ;;AAFY,KAAd;AAID;;AAEDI,EAAAA,YAAY,CAACgB,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAI,CAAC,KAAKxB,KAAL,CAAWE,IAAX,CAAgBe,MAArB,EAA6B;AAC3B;AACD;;AACD,UAAMQ,OAAO,GAAG;AACdvB,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADH;AAEdS,MAAAA,EAAE,EAAEe,IAAI,CAACC,GAAL,EAFU;AAGdd,MAAAA,IAAI,EAAE,KAHQ;AAIdG,MAAAA,KAAK,EAAE;AAJO,KAAhB;AAMA,SAAKE,QAAL,CAAcC,SAAS,KAAK;AAC1BlB,MAAAA,KAAK,EAAEkB,SAAS,CAAClB,KAAV,CAAgB2B,MAAhB,CAAuBH,OAAvB,CADmB;AAE1BvB,MAAAA,IAAI,EAAE;AAFoB,KAAL,CAAvB;AAID;;AArFoC;;AAwFvC,MAAM2B,IAAN,SAAmBlC,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACba,MAAAA,IAAI,EAAE,KADO,CAEb;;AAFa,KAAb;AAID;;AAEDL,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWa,IAA7B;AAAoC,MAAA,OAAO,EAAE,MAAI,KAAKD,UAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqE,KAAKb,KAAL,CAAW+B,OAAhF,CADF;AAGD;;AAbgC,C,CAgBnC;;;AAEA,eAAelC,QAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this)\n  }\n  renderTodo(text) {\n    return(\n      <Todo content={text}/>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <h3>&emsp;&emsp;&emsp;Todo List</h3>\n        <ol>\n        {this.state.items.map(item => (\n          <li key={item.id} >\n            <input  type=\"checkbox\" onChange={() => this.handleDone(item.id)} checked={item.done}/>\n              <div style={{display:'inline', textDecoration:item.style}}>\n              &emsp;\n              {item.text}\n              &emsp;\n              </div>\n            <button  onClick={() => this.handleDelete(item.id)}>\n            delete\n            </button>\n\n          </li>\n        ))}\n        </ol>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add new task: {this.state.items.length + 1}\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  handleDelete(id) {\n    this.setState(prevState => ({\n      items: prevState.items.filter(item => item.id != id)\n    }))\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleDone(id) {\n    let prevState = this.state\n    for(let item of prevState.items) {\n      if(item.id == id){\n        item.done = !item.done\n        item.style = item.done? 'none':'line-through'\n      }\n    }\n    this.setState({\n      items: prevState.items\n      //style: 'text-decoration:line-through'\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.text.length) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now(),\n      done: false,\n      style: 'none'\n    };\n    this.setState(prevState => ({\n      items: prevState.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    done: false,\n    //style: 'text-decoration:none'\n    }\n  }\n\n  render() {\n    return(\n      <button disabled={this.state.done}  onClick={()=>this.handleDone()}>{this.props.content}</button>\n    );\n  }\n}\n\n//ReactDOM.render(<TodoList />, mountNode);\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}